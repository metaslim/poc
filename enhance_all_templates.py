#!/usr/bin/env python3
"""
Script to enhance all trading pattern templates with comprehensive detection criteria.
"""

import os
from pathlib import Path

# Template enhancement patterns
ENHANCEMENTS = {
    'averaging_down': {
        'description': 'Detect averaging down where traders add to losing positions without fundamental justification, often increasing risk exposure.',
        'criteria': [
            '‚Ä¢ Multiple purchases of same symbol with decreasing average price',
            '‚Ä¢ Position size increases as price moves against initial position',
            '‚Ä¢ Adding to positions without stop-loss adjustment or risk reassessment',
            '‚Ä¢ Dollar cost averaging into declining fundamentals',
            '‚Ä¢ Justifying additions with "cheaper" rather than "better" reasoning',
            '‚Ä¢ Ignoring technical breakdown while adding to position'
        ],
        'quantifiable': [
            '‚Ä¢ Position size doubles/triples at lower prices without proportional upside increase',
            '‚Ä¢ Maximum loss potential increases >50% from original position',
            '‚Ä¢ Average cost basis continues declining over multiple entries',
            '‚Ä¢ Win rate on averaged-down positions <30%',
            '‚Ä¢ Time to breakeven extends significantly with each addition'
        ],
        'psychological': [
            '‚Ä¢ Notes contain "getting a better price", "dollar cost averaging", "it can\'t go lower"',
            '‚Ä¢ Refusal to admit original entry was mistimed',
            '‚Ä¢ Increasing conviction as price falls without new fundamental data',
            '‚Ä¢ Treating unrealized losses as "paper" rather than real risk'
        ]
    },

    'correlation_blindness': {
        'description': 'Detect correlation blindness where traders fail to recognize position concentration risk through highly correlated assets.',
        'criteria': [
            '‚Ä¢ Multiple positions in same sector without acknowledging correlation',
            '‚Ä¢ Holding tech stocks, tech ETFs, and tech options simultaneously',
            '‚Ä¢ Geographic concentration (all US, all emerging markets) without hedging',
            '‚Ä¢ Similar risk factors across positions (interest rate sensitivity, oil exposure)',
            '‚Ä¢ Diversification illusion through different symbols with similar drivers',
            '‚Ä¢ Ignoring sector rotation impact on concentrated positions'
        ],
        'quantifiable': [
            '‚Ä¢ Portfolio correlation coefficient >0.7 across major positions',
            '‚Ä¢ Sector concentration >40% of portfolio in single industry',
            '‚Ä¢ Beta-adjusted portfolio exposure >150% due to correlated positions',
            '‚Ä¢ Drawdowns affect >80% of positions simultaneously',
            '‚Ä¢ Risk-adjusted returns decline due to false diversification'
        ],
        'timing': [
            '‚Ä¢ All positions decline together during sector corrections',
            '‚Ä¢ Benefits missed from rotation into uncorrelated sectors',
            '‚Ä¢ Over-concentration during sector bubbles',
            '‚Ä¢ Simultaneous exit pressure during risk-off periods'
        ]
    },

    'herd_mentality': {
        'description': 'Detect herd mentality where trading decisions follow crowd behavior rather than independent analysis.',
        'criteria': [
            '‚Ä¢ Trading based on social media sentiment or forums',
            '‚Ä¢ Following "guru" recommendations without independent verification',
            '‚Ä¢ Buying into popular stocks without understanding business',
            '‚Ä¢ Selling during panic periods due to crowd behavior',
            '‚Ä¢ FOMO entries during social media hype cycles',
            '‚Ä¢ Abandoning profitable strategies due to peer pressure'
        ],
        'social_signals': [
            '‚Ä¢ Trading volume and social media mentions strongly correlated',
            '‚Ä¢ Position entries coincide with trending hashtags or discussions',
            '‚Ä¢ Strategy changes follow popular trading personalities',
            '‚Ä¢ Risk tolerance varies with crowd sentiment',
            '‚Ä¢ Exit timing influenced by community panic/euphoria'
        ],
        'quantifiable': [
            '‚Ä¢ Win rate decreases during high social sentiment periods',
            '‚Ä¢ Position size increases with social validation',
            '‚Ä¢ Trading frequency correlates with social media activity',
            '‚Ä¢ Worst performing trades coincide with peak social interest',
            '‚Ä¢ Strategy abandonment follows crowd psychological shifts'
        ]
    },

    'holding_losers_too_long': {
        'description': 'Detect excessive holding of losing positions due to loss aversion and hope rather than objective analysis.',
        'criteria': [
            '‚Ä¢ Positions held significantly longer when showing losses vs gains',
            '‚Ä¢ Stop-losses repeatedly moved lower rather than executed',
            '‚Ä¢ Fundamental deterioration ignored while holding losing positions',
            '‚Ä¢ Converting day trades to swing trades, swing trades to investments when losing',
            '‚Ä¢ Rationalizing continued holding with "long-term" perspective',
            '‚Ä¢ Avoiding realization of losses for tax or psychological reasons'
        ],
        'timing_analysis': [
            '‚Ä¢ Average holding period for losers >3x longer than winners',
            '‚Ä¢ Time to maximum loss significantly exceeds time to maximum gain',
            '‚Ä¢ Position monitoring intensity decreases as losses mount',
            '‚Ä¢ Exit delay increases proportionally with loss magnitude'
        ],
        'quantifiable': [
            '‚Ä¢ Loss aversion ratio: hold losers 2.5x longer than winners',
            '‚Ä¢ Maximum drawdown per position exceeds original risk parameters',
            '‚Ä¢ Percentage of portfolio in underwater positions >30%',
            '‚Ä¢ Average loss per losing trade significantly exceeds average gain'
        ]
    },

    'ignoring_risk_management': {
        'description': 'Detect systematic violations of risk management principles leading to excessive losses and portfolio instability.',
        'criteria': [
            '‚Ä¢ Position sizing exceeds predetermined risk parameters',
            '‚Ä¢ No stop-losses set or stop-losses consistently ignored',
            '‚Ä¢ Portfolio heat exceeds safe levels (>20% total risk)',
            '‚Ä¢ Correlation risk ignored in position sizing',
            '‚Ä¢ Leverage used without corresponding position size reduction',
            '‚Ä¢ Risk per trade increases after losing streaks'
        ],
        'violations': [
            '‚Ä¢ Individual position risk >5% of portfolio without justification',
            '‚Ä¢ Total portfolio risk exceeds 25% at any time',
            '‚Ä¢ Stop-losses moved against position >3 times',
            '‚Ä¢ Position additions increase total risk beyond original plan',
            '‚Ä¢ Leverage multiplies position sizes without reducing base allocation'
        ],
        'consequences': [
            '‚Ä¢ Maximum drawdown exceeds 20% due to poor risk control',
            '‚Ä¢ Single positions cause >10% portfolio impact',
            '‚Ä¢ Risk-of-ruin probability exceeds acceptable levels',
            '‚Ä¢ Sharpe ratio deteriorates due to excessive volatility'
        ]
    }
}

def enhance_template(file_path: Path, enhancement_data: dict):
    """Enhance a single template with comprehensive criteria."""

    # Read existing content
    if file_path.exists():
        with open(file_path, 'r') as f:
            original = f.read().strip()
    else:
        original = f"Prompt: Detect {file_path.stem.replace('_', ' ')} patterns."

    # Create enhanced content
    enhanced = f"Prompt: {enhancement_data['description']}\n\n"

    enhanced += "SPECIFIC DETECTION CRITERIA:\n"
    for criterion in enhancement_data['criteria']:
        enhanced += f"{criterion}\n"

    enhanced += "\nQUANTIFIABLE SIGNALS:\n"
    for signal in enhancement_data['quantifiable']:
        enhanced += f"{signal}\n"

    if 'psychological' in enhancement_data:
        enhanced += "\nPSYCHOLOGICAL MARKERS:\n"
        for marker in enhancement_data['psychological']:
            enhanced += f"{marker}\n"

    if 'social_signals' in enhancement_data:
        enhanced += "\nSOCIAL BEHAVIOR INDICATORS:\n"
        for signal in enhancement_data['social_signals']:
            enhanced += f"{signal}\n"

    if 'timing_analysis' in enhancement_data:
        enhanced += "\nTIMING ANALYSIS:\n"
        for timing in enhancement_data['timing_analysis']:
            enhanced += f"{timing}\n"

    if 'violations' in enhancement_data:
        enhanced += "\nRISK VIOLATIONS:\n"
        for violation in enhancement_data['violations']:
            enhanced += f"{violation}\n"

    if 'consequences' in enhancement_data:
        enhanced += "\nPERFORMANCE CONSEQUENCES:\n"
        for consequence in enhancement_data['consequences']:
            enhanced += f"{consequence}\n"

    enhanced += "\nCALCULATE IMPACT: Measure performance, risk metrics, and behavioral consistency across different periods"

    # Write enhanced content
    with open(file_path, 'w') as f:
        f.write(enhanced)

    print(f"‚úÖ Enhanced: {file_path.name}")

def main():
    """Enhance all templates in the directory."""
    templates_dir = Path(__file__).parent / "prompts" / "trading_pattern_templates"

    if not templates_dir.exists():
        print(f"‚ùå Directory not found: {templates_dir}")
        return

    # Process templates we have enhancements for
    for template_name, enhancement in ENHANCEMENTS.items():
        template_file = templates_dir / f"{template_name}.txt"
        enhance_template(template_file, enhancement)

    print(f"\nüéâ Enhanced {len(ENHANCEMENTS)} templates!")
    print("Note: Some templates were already enhanced manually and are not included in this batch.")

if __name__ == "__main__":
    main()